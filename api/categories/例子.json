{"name":"例子","postlist":[{"author":"Irony","title":"PyQt5动画边框阴影","slug":"animateshadow","date":"2018-09-25 23:38:12","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/animateshadow.json","excerpt":"为子控件增加动画阴影效果，结合QGraphicsDropShadowEffect和QPropertyAnimation动态改变阴影半径达到效果，在旧版本的Qt中QGraphicsDropShadowEffect可能会有点问题（父控件会影响子控件）<br>","keywords":null,"cover":"images/ShadowEffect_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"动画","path":"api/tags/动画.json"},{"name":"阴影","path":"api/tags/阴影.json"}]},{"author":"Irony","title":"PyQt5圆形图片","slug":"circleimage","date":"2018-09-25 22:13:26","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/circleimage.json","excerpt":"实现圆形图片的方法有很多，比如用遮罩（mask）,裁切等等。这里比较几种实现方式，选出个人认为最优的方案。<br>","keywords":null,"cover":"images/circleimage1_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"圆形","path":"api/tags/圆形.json"},{"name":"图片","path":"api/tags/图片.json"}]},{"author":"不许人间见白头","title":"QDataWidgetMapper 数据库绑定 QLineEdit控件","slug":"datawidgetmapper","date":"2018-10-29 16:17:59","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/datawidgetmapper.json","excerpt":"qt为操作数据库提供了一个model+view的模式 , 这样简单的出入库逻辑就不需要自己编写。QDataWidgetMapper 可以 将数据库的数据 映射到其他控件 。注意: 表格里的数据修改 还没有提交到数据库 , 需要点击提交按钮才生效。<br>","keywords":null,"cover":"images/datawidgetmapper_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"Model","path":"api/tags/Model.json"}]},{"author":"Irony","title":"PyQt5窗口翻转动画","slug":"flipwidgetanimation","date":"2019-05-15 22:48:00","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/flipwidgetanimation.json","excerpt":"QQ的界面一直是用来模仿练习做界面的好东西，这里就有一个类似QQ登录界面的实现翻转效果，当然这里并没有用两个窗口去做，而是用了QStackedWidget包含两个控件做切换，同时单独使用一个窗口做动画绘制。<br>","keywords":null,"cover":"images/FlipWidgetAnimation_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"动画","path":"api/tags/动画.json"},{"name":"翻转","path":"api/tags/翻转.json"}]},{"author":"Irony","title":"PyQt5窗口跟随其它窗口","slug":"followwindow","date":"2018-10-23 15:08:56","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/followwindow.json","excerpt":"要实现PyQt窗口跟随其它外部的窗口，能想到两点办法，一个是hook系统事件得到目标窗口的位置和大小以及是否关闭等，二是通过循环检测窗口的位置来实现。<br>","keywords":null,"cover":"images/FollowWindow_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"窗口","path":"api/tags/窗口.json"}]},{"author":"Irony","title":"PyQt5之QSlider滑动条点击定位","slug":"jumpslider","date":"2018-11-05 23:12:26","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/jumpslider.json","excerpt":"QSlider 在通常情况下支持鼠标点击可以任意拖动，或者鼠标点击则往鼠标点击的方向移动一小格，这种移动一小格通常情况下用起来很不方便，比如我要做一个播放器的播放进度条，肯定是点击某个位置就直接跳到该位置，为此需要对 QSlider 的鼠标事件mousePressEvent进行重写。<br>","keywords":null,"cover":"images/ClickJumpSlider_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"滑动条","path":"api/tags/滑动条.json"}]},{"author":"Irony","title":"PyQt5仿网页图片鼠标移动特效","slug":"likehtmleffect","date":"2018-10-23 17:57:03","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/likehtmleffect.json","excerpt":"em，就是类似于那种游戏官网首页的图片，鼠标放上去后来回移动，图片的前景和背景错位移动。<br>","keywords":null,"cover":"images/ImageSlipped_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"特效","path":"api/tags/特效.json"}]},{"author":"Irony","title":"PyQt5菜单之多选功能","slug":"mselectmenu","date":"2018-10-25 09:53:34","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/mselectmenu.json","excerpt":"有时候会遇到这种需求：在界面某个位置弹出一个菜单，其中里面的菜单项可以多选（类似配置选项），此时用QMenu会遇到点击一个菜单项就会自动关闭，当然可以通过其他方式实现该功能，不过这里就采用QMenu通过特殊的方式来实现该需求。<br>","keywords":null,"cover":"images/MultiSelect_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"菜单","path":"api/tags/菜单.json"}]},{"author":"Irony","title":"PyQt5之图片轮播","slug":"pageswitching","date":"2018-11-24 21:45:06","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/pageswitching.json","excerpt":"之前看到了QStackedWidget做切换动画，让界面不那么生硬，于是参考了 http://qt.shoutwiki.com/wiki/Extending_QStackedWidget_for_sliding_page_animations_in_Qt 做了一个QStackedWidget的切换动画，然后利用QStackedWidget结合多个QLabel显示图片来做一个轮播效果。其实在写之前也在网上找了很多例子，参看过后发现大多例子都是利用到了paintEvent去绘制，这样其实还是比较麻烦，个人觉得更好的方式是使用QPropertyAnimation属性动画修改控件中QLabel图片控件的pos位置属性就可以达到移动效果了。<br>","keywords":null,"cover":"images/PageSwitching_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"动画","path":"api/tags/动画.json"},{"name":"轮播","path":"api/tags/轮播.json"}]},{"author":"Irony","title":"PyQt5结合Asyncio异步","slug":"pyqt5asyncio","date":"2018-10-24 14:32:26","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/pyqt5asyncio.json","excerpt":"今天尝试了下quamash框架，该框架是一个PyQt的异步事件循环封装库，使用Python3+ 的asyncio这个异步库。在看了该项目的内容后发现只有一个简单的进度条例子，故尝试用其来下载网络图片并显示。<br>","keywords":null,"cover":"images/pyqt5asyncio_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"Asyncio","path":"api/tags/Asyncio.json"},{"name":"异步","path":"api/tags/异步.json"}]},{"author":"Irony","title":"PyQt5显示.9格式的PNG图片","slug":"qtninepatch","date":"2018-10-26 10:00:08","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/qtninepatch.json","excerpt":"做过安卓开发的和使用过QQ的都知道.9.png这种图片格式，效果就如QQ的聊天气泡一样可以拉伸，这种格式的图片允许开发人员定义可扩展区域，当需要延伸图片以填充比图片本身更大区域时，可扩展区的内容被延展；允许开发人员定义内容显示区，用于显示文字或其他内容。目前在Github上有两个C++版本的，在这里我把它们都用Python实现了一遍。另外一个我也为PyQt提供了编译好的pyd文件。<br>","keywords":null,"cover":"images/NinePatchImage_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"图片","path":"api/tags/图片.json"},{"name":"气泡","path":"api/tags/气泡.json"},{"name":".9png","path":"api/tags/.9png.json"}]},{"author":"Irony","title":"QtWebkit和QWebEngineView与Javascript交互","slug":"qtwebjs","date":"2019-05-22 11:30:36","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/qtwebjs.json","excerpt":"以前还是QWebView的时候和Javascript交互起来很方便，但是到了Qt5.6以后改用了QWebEngineView，并通过其提供的qwebchannel.js来进行交互。可能是由于刚出来的原因，这玩意儿有个bug就是必须在每次加载页面的时候手动注入，跳转页面后就失效了，需要手动注入，目前有没有修复具体未测试。这里对QWebView和QWebEngineView与Js交互都做了一个示例。<br>","keywords":null,"cover":"images/JsSignals_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"QWebView","path":"api/tags/QWebView.json"},{"name":"QWebEngineView","path":"api/tags/QWebEngineView.json"},{"name":"浏览器","path":"api/tags/浏览器.json"}]},{"author":"Irony","title":"PyQt5仿网页鼠标移动点阵特效","slug":"rlatticeeffect","date":"2018-10-29 16:49:10","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/rlatticeeffect.json","excerpt":"Orz，前段时间有个zz需求，就是要做一个类似网页上很多个多点连线、鼠标移动跟随的那种炫酷特效，然后花了点时间在网上找了js做的，刚开始打算是嵌入QWebView来显示网页，后来研究了下js的算法代码，遂改用QWidget的paintEvent直接绘制。<br>","keywords":null,"cover":"images/RlatticeEffect_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"动画","path":"api/tags/动画.json"},{"name":"特效","path":"api/tags/特效.json"}]},{"author":"Irony","title":"PyQt5无边框圆角阴影","slug":"shadowradius","date":"2019-04-26 00:06:26","updated":"2019-11-05T06:30:50.851Z","comments":null,"path":"api/articles/shadowradius.json","excerpt":"在做PyQt窗口开发中经常会遇到要做一些无边框不规则的窗口，可能还会带有阴影效果，这里演示做一个简单的无边框圆角的窗口，原理就在于背景窗口的透明和一层有色背景控件的叠加。<br>","keywords":null,"cover":"images/FramelessDialog1_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"阴影","path":"api/tags/阴影.json"},{"name":"无边框","path":"api/tags/无边框.json"},{"name":"圆角","path":"api/tags/圆角.json"}]}]}