{"name":"信号","postlist":[{"author":"Irony","title":"三种方式绑定信号槽","slug":"bindsignals","date":"2019-05-04 16:07:06","updated":"2020-02-21T15:19:35.315Z","comments":null,"path":"api/articles/bindsignals.json","excerpt":"网上关于PyQt5的信号绑定使用的教程比较上，很多还是以前的绑定方式，导致在PyQt5中无法使用，这里归纳总结下已有的几种绑定信号槽的方式，<br>这几种方式各有各的优点和缺点。<br>","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"教程","path":"api/categories/教程.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"信号","path":"api/tags/信号.json"}]},{"author":"Irony","title":"PyQt5判断信号是否连接","slug":"issignalconnected","date":"2019-04-26 22:06:26","updated":"2020-02-21T15:19:35.315Z","comments":null,"path":"api/articles/issignalconnected.json","excerpt":"在PyQt中某些情况下需要取消原来的信号连接，此时需要使用disconnect方法，但是在逻辑不严谨的情况下可能会导致多次调用disconnect方法而导致报错，当然可以通过try except来包裹代码。这里通过 isSignalConnected 来判断信号是否连接。<br>","keywords":null,"cover":"images/IsSignalConnected_thumb.jpg","categories":[{"name":"教程","path":"api/categories/教程.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"信号","path":"api/tags/信号.json"}]},{"author":"不许人间见白头","title":"QRunnable线程池发信号","slug":"runnablesignal","date":"2019-04-30 15:58:09","updated":"2020-02-21T15:19:35.315Z","comments":null,"path":"api/articles/runnablesignal.json","excerpt":"因为只有继承QObject的类才能有信号和自定义信号，而QRunnable并不是继承自QObject，也不能用多继承的方式，这里考虑定义个全局的QObject变量用来存放一些定义好的可复用的信号。<br>","keywords":null,"cover":"images/runnablesignal1_thumb.jpg","categories":[{"name":"教程","path":"api/categories/教程.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"信号","path":"api/tags/信号.json"},{"name":"线程","path":"api/tags/线程.json"}]}]}