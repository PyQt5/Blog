{"name":"Python","postlist":[{"author":"Irony","title":"Python调用Java对Excel截图","slug":"calljava","date":"2019-03-12 21:15:06","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/calljava.json","excerpt":"有的时候会遇到一些奇葩的需求，就是用Excel做报表，但是需要对里面的数据进行填充并生成报表图片，发送出去。这里记录用python调用jar包对excel文件进行公式计算和截图，数据填充可以用xlrd或者openpyxl<br>","keywords":null,"cover":"images/calljava_thumb.jpg","categories":[{"name":"教程","path":"api/categories/教程.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"截图","path":"api/tags/截图.json"}]},{"author":"Irony","title":"异常捕获之cgitb模块","slug":"cgitb","date":"2018-09-17 23:17:06","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/cgitb.json","excerpt":"cgitb模块为Python脚本提供了一个特殊的异常管理器。名字有点误导人，它最初设计是为了以HTML格式展示cgi脚本的大量异常信息。后来，他扩展为也可以展示纯文本信息。该模块激活后，如果发生了未捕获的异常，将会展示格式化的输出报告。该报告包括源代码每一层的回溯，以及当前执行程序的参数和局部变量。以及，你可以选择将这些信息存到一个文件里，而不是发送到浏览器。<br>","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"笔记","path":"api/categories/笔记.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"异常","path":"api/tags/异常.json"}]},{"author":"丑读书穷加班","title":"多线程之守护线程和阻塞线程","slug":"daemonthread","date":"2018-10-24 15:51:15","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/daemonthread.json","excerpt":"如果你设置一个线程为守护线程，就表示你在说这个线程是不重要的，在进程退出的时候，不用等待这个线程退出。如果你的主线程在退出的时候，不用等待那些子线程完成，那就设置这些线程的daemon属性。<br>","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"笔记","path":"api/categories/笔记.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"线程","path":"api/tags/线程.json"}]},{"author":"人间白头　","title":"python 判断屏幕等宽字符串的长度 　","slug":"equal_str_width","date":"2019-12-26 19:49:41","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/equal_str_width.json","excerpt":"判断屏幕等宽字符串的长度 ?","keywords":null,"cover":"images/1240_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]},{"author":"Irony","title":"FFmpeg合成加密HLS记录","slug":"ffmpeghls","date":"2019-01-12 19:28:06","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/ffmpeghls.json","excerpt":"记录在某个需求中要求截图并合成加密视频文件，这里采用FFmpeg的管道流来实现生成HLS加密文件。<br>","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"笔记","path":"api/categories/笔记.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"FFmpeg","path":"api/tags/FFmpeg.json"},{"name":"HLS","path":"api/tags/HLS.json"}]},{"author":"人间白头　","title":"在pyqt中使用python全局钩子模块","slug":"pyqt5_hook_key_625781186","date":"2019-07-07 01:37:22","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/pyqt5_hook_key_625781186.json","excerpt":"在某些时候需要为自己的软件增加全局键盘监听，比如软件最小化隐藏后可以通过热键唤醒，又或者比如像QQ一样可以全局热键截图。这里介绍几个方法实现在PyQt中使用Python全局钩子模块实现全局热键功能。","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"pyqt hook key","path":"api/tags/pyqt hook key.json"}]},{"author":"人间白头　","title":"python 获取子进程print信息 　","slug":"pyqt_get_subprocess_pipeline","date":"2019-05-24 14:39:44","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/pyqt_get_subprocess_pipeline.json","excerpt":"在PyQt中使用子线程读取子进程Python脚本的print输出流内容。","keywords":null,"cover":"images/5ce793171984f27031_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"subprocess.Popen","path":"api/tags/subprocess.Popen.json"},{"name":"拦截print","path":"api/tags/拦截print.json"}]},{"author":"人间白头　","title":"python 状态机模块 　","slug":"python_statemachine","date":"2019-07-17 17:03:33","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/python_statemachine.json","excerpt":"用状态来取代if…else判断。","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"python 状态机","path":"api/tags/python 状态机.json"}]},{"author":"人间白头　","title":"像读文章一样读源码","slug":"read_open_source","date":"2019-07-07 01:37:22","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/read_open_source.json","excerpt":"使用snoop, 像读文章一样读源码。","keywords":null,"cover":"images/1240_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"debug","path":"api/tags/debug.json"},{"name":"snoop","path":"api/tags/snoop.json"}]},{"author":"人间白头　","title":"python 拷贝虚拟环境(一) 　","slug":"virtualenvpy","date":"2019-05-02 15:21:01","updated":"2020-02-21T15:20:38.584Z","comments":null,"path":"api/articles/virtualenvpy.json","excerpt":"通常来说 ,  刚开始使用python的时候都是把包装到全局路径 , 随着各个项目安装的包越来越多 , 之后每开始一个项目 , pycharm创建索引的时间都越来越漫长 , 所以不可避免得开始使用虚拟环境。<br>经过一番了解 ，虚拟环境的优点有这些：改善 pycharm 索引时间;各个项目的库不会冲突；理论上虚拟环境可以给同版本的操作系统使用(未试验过);pip freeze &gt; requestment.txt 导出的依赖清晰;各个版本的python共存;…","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"virtualenvwrapper","path":"api/tags/virtualenvwrapper.json"},{"name":"virtualenv","path":"api/tags/virtualenv.json"}]}]}