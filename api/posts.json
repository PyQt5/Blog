{"total":39,"pageSize":10,"pageCount":4,"data":[{"author":"人间白头　","title":"python 判断屏幕等宽字符串的长度 　","slug":"equal_str_width_625781186","date":"2019-12-26 19:49:41","updated":"2020-04-06T11:24:13.171Z","comments":null,"path":"api/articles/equal_str_width_625781186.json","excerpt":"判断屏幕等宽字符串的长度 ?","keywords":null,"cover":"images/1240_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]},{"author":"人间白头　","title":"修改pyuic代替pyside2-uic.","slug":"use_pyuic_insteadof_pyside2uic","date":"2019-12-26 19:49:41","updated":"2020-04-06T11:24:13.175Z","comments":null,"path":"api/articles/use_pyuic_insteadof_pyside2uic.json","excerpt":"修改pyuic代替pyside2-uic","keywords":null,"cover":"images/1240_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"PyQt5 PySide2","path":"api/tags/PyQt5 PySide2.json"}]},{"author":"Irony","title":"PyQt学习心得","slug":"studynotes","date":"2019-08-26 09:00:00","updated":"2020-04-06T11:24:13.175Z","comments":null,"path":"api/articles/studynotes.json","excerpt":"在学习PyQt的过程中由于资料的缺乏或者没有中文导致大多数人感叹资料太少，学习困难，又或者急于求进，赶鸭子上架的情况，此时有系统的学习方法很重要。每个人都需要有自己的学习方法，别人的学习方法并不一定适合自己但可以采纳一些。笔者在这里列举了一些当初自己自学的一些心得和方法，希望帮助大家建立一套自己的学习PyQt的方法，提高自身的学习能力。<br>","keywords":null,"cover":"images/desiger_create_thumb.jpg","categories":[{"name":"笔记","path":"api/categories/笔记.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"}]},{"author":"人间白头　","title":"python 状态机模块 　","slug":"python_statemachine_625781186","date":"2019-07-17 17:03:33","updated":"2020-04-06T11:24:13.171Z","comments":null,"path":"api/articles/python_statemachine_625781186.json","excerpt":"用状态来取代if…else判断。","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"python 状态机","path":"api/tags/python 状态机.json"}]},{"author":"人间白头　","title":"在pyqt中使用python全局钩子模块","slug":"pyqt5_hook_key_625781186","date":"2019-07-07 01:37:22","updated":"2020-04-06T11:24:13.171Z","comments":null,"path":"api/articles/pyqt5_hook_key_625781186.json","excerpt":"在某些时候需要为自己的软件增加全局键盘监听，比如软件最小化隐藏后可以通过热键唤醒，又或者比如像QQ一样可以全局热键截图。这里介绍几个方法实现在PyQt中使用Python全局钩子模块实现全局热键功能。","keywords":null,"cover":"images/default_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"pyqt hook key","path":"api/tags/pyqt hook key.json"}]},{"author":"人间白头　","title":"像读文章一样读源码","slug":"read_open_source","date":"2019-07-07 01:37:22","updated":"2020-04-06T11:24:13.171Z","comments":null,"path":"api/articles/read_open_source.json","excerpt":"使用snoop, 像读文章一样读源码。","keywords":null,"cover":"images/1240_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"debug","path":"api/tags/debug.json"},{"name":"snoop","path":"api/tags/snoop.json"}]},{"author":"人间白头　","title":"python 获取子进程print信息 　","slug":"pyqt_get_subprocess_pipeline_625781186","date":"2019-05-24 14:39:44","updated":"2020-04-06T11:24:13.171Z","comments":null,"path":"api/articles/pyqt_get_subprocess_pipeline_625781186.json","excerpt":"在PyQt中使用子线程读取子进程Python脚本的print输出流内容。","keywords":null,"cover":"images/5ce793171984f27031_thumb.jpg","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"subprocess.Popen","path":"api/tags/subprocess.Popen.json"},{"name":"拦截print","path":"api/tags/拦截print.json"}]},{"author":"Irony","title":"QtWebkit和QWebEngineView与Javascript交互","slug":"qtwebjs","date":"2019-05-22 11:30:36","updated":"2020-04-06T11:24:13.171Z","comments":null,"path":"api/articles/qtwebjs.json","excerpt":"以前还是QWebView的时候和Javascript交互起来很方便，但是到了Qt5.6以后改用了QWebEngineView，并通过其提供的qwebchannel.js来进行交互。可能是由于刚出来的原因，这玩意儿有个bug就是必须在每次加载页面的时候手动注入，跳转页面后就失效了，需要手动注入，目前有没有修复具体未测试。这里对QWebView和QWebEngineView与Js交互都做了一个示例。<br>","keywords":null,"cover":"images/JsSignals_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"QWebView","path":"api/tags/QWebView.json"},{"name":"QWebEngineView","path":"api/tags/QWebEngineView.json"},{"name":"浏览器","path":"api/tags/浏览器.json"}]},{"author":"Irony","title":"PyQt5窗口翻转动画","slug":"flipwidgetanimation","date":"2019-05-15 22:48:00","updated":"2020-04-06T11:24:13.171Z","comments":null,"path":"api/articles/flipwidgetanimation.json","excerpt":"QQ的界面一直是用来模仿练习做界面的好东西，这里就有一个类似QQ登录界面的实现翻转效果，当然这里并没有用两个窗口去做，而是用了QStackedWidget包含两个控件做切换，同时单独使用一个窗口做动画绘制。<br>","keywords":null,"cover":"images/FlipWidgetAnimation_thumb.jpg","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"动画","path":"api/tags/动画.json"},{"name":"翻转","path":"api/tags/翻转.json"}]},{"author":"Irony","title":"PyQt属性动画(QPropertyAnimation)","slug":"QPropertyAnimation","date":"2019-05-08 15:43:06","updated":"2020-04-06T11:24:13.171Z","comments":null,"path":"api/articles/QPropertyAnimation.json","excerpt":"QPropertyAnimation继承自QVariantAnimation，其作为Qt的属性动画用于针对控件的属性或者继承自QObject的对象中定义的属性做修改，<br>简单来说就是基类是QObject且定义了属性变量，就可以用QPropertyAnimation来做属性动画。同时也可以通过pyqtProperty来增加自定义属性。<br>","keywords":null,"cover":"images/QPropertyAnimation_thumb.jpg","categories":[{"name":"笔记","path":"api/categories/笔记.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"动画","path":"api/tags/动画.json"}]}]}