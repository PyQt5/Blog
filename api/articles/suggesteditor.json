{"author":"Irony","title":"推荐编辑器LiClipse","slug":"suggesteditor","date":"2019-05-04 18:04:08","updated":"2019-10-21T15:01:38.463Z","comments":true,"path":"api/articles/suggesteditor.json","url":"https://pyqt5.com/suggesteditor.html","excerpt":"关于Python的开发编辑器有很多，每个人有每个人的喜好，经常看到很多在问什么编辑器好用，有人推荐Sublime，有人推荐Pycharm等等，这里就不去比较其它编辑器的优缺点了，只谈谈关于LiClipse这个编辑器在初级使用阶段的智能提示功能等。开箱即用，支持多种语言，RST，Markdown和HTML编辑器的HTML预览。<br>","covers":["/images/editor1.png","/images/editor2.png","/images/editor3.png","/images/editor4.png","/images/editor5.png","/images/editor_import.png","/images/editor_import2.png","/images/editor_env.png","/images/editor_tab.png","/images/editor_tpl.png"],"content":"<p>关于Python的开发编辑器有很多，每个人有每个人的喜好，经常看到很多在问什么编辑器好用，有人推荐Sublime，有人推荐Pycharm等等，这里就不去比较其它编辑器的优缺点了，只谈谈关于LiClipse这个编辑器在初级使用阶段的智能提示功能等。开箱即用，支持多种语言，RST，Markdown和HTML编辑器的HTML预览。<br><a id=\"more\"></a></p>\n<p>其实LiClipse这个编辑器就是以前的PyDev插件的独立版本，基于Eclipse编辑器开发，去掉了Java的相关开发功能，关于软件的详细说明可以去官网查看： <a href=\"http://www.liclipse.com/\" target=\"_blank\" rel=\"noopener\">http://www.liclipse.com/</a></p>\n<p>编辑器只需要少量的配置，打开即可使用，快速自动import，也可以根据需要安装自己所需的插件，比如json、svn、主题插件等。个人推荐：适合刚入门的新手使用</p>\n<p>由于新版的PyQt和PyDev去掉了详细的函数提示，所以PyQt的智能提示只有函数和返回值，并没有英文注释，但是以前的比如PyQt4的智能提示应该是有详细的英文注释提示。</p>\n<h2 id=\"界面预览\"><a href=\"#界面预览\" class=\"headerlink\" title=\"界面预览\"></a>界面预览</h2><ol>\n<li>主界面<br><img src=\"/images/editor1.png\" alt=\"editor1\"></li>\n<li>鼠标悬停提示<br><img src=\"/images/editor2.png\" alt=\"editor2\"></li>\n<li>输入提示<br><img src=\"/images/editor3.png\" alt=\"editor3\"></li>\n<li>Git面板<br><img src=\"/images/editor4.png\" alt=\"editor4\"></li>\n<li>全局搜索（Ctrl + H）<br><img src=\"/images/editor5.png\" alt=\"editor5\"><br><img src=\"/images/editor6.png\" alt=\"editor6\"></li>\n</ol>\n<h2 id=\"自动导包\"><a href=\"#自动导包\" class=\"headerlink\" title=\"自动导包\"></a>自动导包</h2><p>其实这个功能我是非常喜欢的，通过按下快捷键即可自动寻找包名导入，快捷键 Ctrl + Shift + O</p>\n<p><img src=\"/images/editor_import.png\" alt=\"editor_import\"></p>\n<p>也可以在标红的代码上按下 Ctrl + F1进行导入</p>\n<p><img src=\"/images/editor_import2.png\" alt=\"editor_import2\"></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>打开编辑器后首先要配置【Window -&gt; Preferences】的就是Python的环境变量，可以同时添加多个Python版本</p>\n<p><img src=\"/images/editor_env.png\" alt=\"editor_env\"></p>\n<h2 id=\"Tab等设置\"><a href=\"#Tab等设置\" class=\"headerlink\" title=\"Tab等设置\"></a>Tab等设置</h2><ol>\n<li>Insert spaces for tabs        tab转空格</li>\n<li>Show line numbers             显示行号</li>\n</ol>\n<p><img src=\"/images/editor_tab.png\" alt=\"editor_tab\"></p>\n<h2 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h2><p>这个功能可以快速插入自己定义好的模版代码，比如 <code>if __name__ == &#39;__main__&#39;:</code>等等，比如我这里配置的创建文件的模版</p>\n<p><img src=\"/images/editor_tpl.png\" alt=\"editor_tpl\"></p>\n<h2 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">格式化对齐</td>\n<td style=\"text-align:center\">Ctrl + Shift + F</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">自动导包</td>\n<td style=\"text-align:center\">Ctrl + Shift + O</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">快捷提示</td>\n<td style=\"text-align:center\">Alt + /</td>\n</tr>\n</tbody>\n</table>\n","raw":"---\nauthor: Irony\ntitle: 推荐编辑器LiClipse\ndate: 2019-05-04 18:04:08\ntop: 1\ntags: \n - 编辑器\ncategories: 随笔\n---\n\n关于Python的开发编辑器有很多，每个人有每个人的喜好，经常看到很多在问什么编辑器好用，有人推荐Sublime，有人推荐Pycharm等等，这里就不去比较其它编辑器的优缺点了，只谈谈关于LiClipse这个编辑器在初级使用阶段的智能提示功能等。开箱即用，支持多种语言，RST，Markdown和HTML编辑器的HTML预览。\n<!-- more -->\n\n其实LiClipse这个编辑器就是以前的PyDev插件的独立版本，基于Eclipse编辑器开发，去掉了Java的相关开发功能，关于软件的详细说明可以去官网查看： http://www.liclipse.com/\n\n编辑器只需要少量的配置，打开即可使用，快速自动import，也可以根据需要安装自己所需的插件，比如json、svn、主题插件等。个人推荐：适合刚入门的新手使用\n\n由于新版的PyQt和PyDev去掉了详细的函数提示，所以PyQt的智能提示只有函数和返回值，并没有英文注释，但是以前的比如PyQt4的智能提示应该是有详细的英文注释提示。\n\n## 界面预览\n\n1. 主界面\n![editor1](/images/editor1.png)\n2. 鼠标悬停提示\n![editor2](/images/editor2.png)\n3. 输入提示\n![editor3](/images/editor3.png)\n4. Git面板\n![editor4](/images/editor4.png)\n5. 全局搜索（Ctrl + H）\n![editor5](/images/editor5.png)\n![editor6](/images/editor6.png)\n\n## 自动导包\n\n其实这个功能我是非常喜欢的，通过按下快捷键即可自动寻找包名导入，快捷键 Ctrl + Shift + O\n\n![editor_import](/images/editor_import.png)\n\n也可以在标红的代码上按下 Ctrl + F1进行导入\n\n![editor_import2](/images/editor_import2.png)\n\n## 配置\n\n打开编辑器后首先要配置【Window -> Preferences】的就是Python的环境变量，可以同时添加多个Python版本\n\n![editor_env](/images/editor_env.png)\n\n## Tab等设置\n\n1. Insert spaces for tabs        tab转空格\n2. Show line numbers             显示行号\n\n![editor_tab](/images/editor_tab.png)\n\n## 模版\n\n这个功能可以快速插入自己定义好的模版代码，比如 `if __name__ == '__main__':`等等，比如我这里配置的创建文件的模版\n\n![editor_tpl](/images/editor_tpl.png)\n\n## 常用快捷键\n\n|            |                  |\n|:----------:|:----------------:|\n| 格式化对齐  | Ctrl + Shift + F |\n| 自动导包    | Ctrl + Shift + O |\n| 快捷提示    | Alt + /          |","categories":[{"name":"随笔","path":"api/categories/随笔.json"}],"tags":[{"name":"编辑器","path":"api/tags/编辑器.json"}]}