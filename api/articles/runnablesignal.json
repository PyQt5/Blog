{"author":"不许人间见白头","title":"QRunnable线程池发信号","slug":"runnablesignal","date":"2019-04-30 15:58:09","updated":"2019-10-22T14:29:29.577Z","comments":true,"path":"api/articles/runnablesignal.json","url":"https://pyqt5.com/runnablesignal.html","excerpt":"因为只有继承QObject的类才能有信号和自定义信号，而QRunnable并不是继承自QObject，也不能用多继承的方式，这里考虑定义个全局的QObject变量用来存放一些定义好的可复用的信号。<br>","covers":["/images/runnablesignal1.png","/images/runnablesignal2.png","/images/runnablesignal3.png"],"content":"<p>因为只有继承<code>QObject</code>的类才能有信号和自定义信号，而<code>QRunnable</code>并不是继承自<code>QObject</code>，也不能用多继承的方式，这里考虑定义个全局的QObject变量用来存放一些定义好的可复用的信号。<br><a id=\"more\"></a></p>\n<p>pools 是 <code>QThreadPool</code> 实例</p>\n<h2 id=\"看图说话\"><a href=\"#看图说话\" class=\"headerlink\" title=\"看图说话\"></a>看图说话</h2><ol>\n<li><img src=\"/images/runnablesignal1.png\" alt=\"runnablesignal1\"></li>\n<li>定义一个全局信号类<br><img src=\"/images/runnablesignal2.png\" alt=\"runnablesignal2\"></li>\n<li>在QRunnable 中发送<br><img src=\"/images/runnablesignal3.png\" alt=\"runnablesignal3\"></li>\n</ol>\n","raw":"---\nauthor: 不许人间见白头\ntitle: QRunnable线程池发信号\ndate: 2019-04-30 15:58:09\ntop: 1\ntags: \n - PyQt\n - 信号\n - 线程\ncategories: 教程\n---\n\n因为只有继承`QObject`的类才能有信号和自定义信号，而`QRunnable`并不是继承自`QObject`，也不能用多继承的方式，这里考虑定义个全局的QObject变量用来存放一些定义好的可复用的信号。\n<!-- more -->\n\npools 是 `QThreadPool` 实例\n\n## 看图说话\n\n1. ![runnablesignal1](/images/runnablesignal1.png)\n2. 定义一个全局信号类\n![runnablesignal2](/images/runnablesignal2.png)\n3. 在QRunnable 中发送\n![runnablesignal3](/images/runnablesignal3.png)","categories":[{"name":"教程","path":"api/categories/教程.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"信号","path":"api/tags/信号.json"},{"name":"线程","path":"api/tags/线程.json"}]}