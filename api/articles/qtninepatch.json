{"author":"Irony","title":"PyQt5显示.9格式的PNG图片","slug":"qtninepatch","date":"2018-10-26 10:00:08","updated":"2020-02-21T15:27:43.040Z","comments":true,"path":"api/articles/qtninepatch.json","url":"https://pyqt5.com/qtninepatch.html","excerpt":"做过安卓开发的和使用过QQ的都知道.9.png这种图片格式，效果就如QQ的聊天气泡一样可以拉伸，这种格式的图片允许开发人员定义可扩展区域，当需要延伸图片以填充比图片本身更大区域时，可扩展区的内容被延展；允许开发人员定义内容显示区，用于显示文字或其他内容。目前在Github上有两个C++版本的，在这里我把它们都用Python实现了一遍。另外一个我也为PyQt提供了编译好的pyd文件。<br>","covers":["https://github.com/PyQt5/PyQt/raw/master/QLabel/ScreenShot/NinePatchImage.gif"],"content":"<p>做过安卓开发的和使用过QQ的都知道<code>.9.png</code>这种图片格式，效果就如QQ的聊天气泡一样可以拉伸，这种格式的图片允许开发人员定义可扩展区域，当需要延伸图片以填充比图片本身更大区域时，可扩展区的内容被延展；允许开发人员定义内容显示区，用于显示文字或其他内容。目前在<code>Github</code>上有两个C++版本的，在这里我把它们都用Python实现了一遍。另外一个我也为<code>PyQt</code>提供了编译好的pyd文件。<br><a id=\"more\"></a></p>\n<h2 id=\"C-版本\"><a href=\"#C-版本\" class=\"headerlink\" title=\"C++版本\"></a>C++版本</h2><p>在Github开源库中搜索到两个C++版本的</p>\n<ol>\n<li>一个是 <a href=\"https://github.com/Roninsc2/NinePatchQt\" target=\"_blank\" rel=\"noopener\">NinePatchQt</a></li>\n<li>一个是 <a href=\"https://github.com/soramimi/QtNinePatch\" target=\"_blank\" rel=\"noopener\">QtNinePatch</a></li>\n</ol>\n<h2 id=\"PyQt5版本\"><a href=\"#PyQt5版本\" class=\"headerlink\" title=\"PyQt5版本\"></a>PyQt5版本</h2><p>这里也分为两个版本，都是基于上面的C++源码翻译改写过来的，具体的例子见项目里面的测试代码吧。</p>\n<ol>\n<li><a href=\"https://github.com/PyQt5/PyQt/blob/master/QLabel/QtNinePatch.py\" target=\"_blank\" rel=\"noopener\">QtNinePatch</a>是参考第一个源码编写，用法是在<code>paintEvent</code>中调用</li>\n<li><a href=\"https://github.com/PyQt5/PyQt/blob/master/QLabel/QtNinePatch2.py\" target=\"_blank\" rel=\"noopener\">QtNinePatch2</a>是参考第二个源码编写，用法是<code>pixmap = QtNinePatch.createPixmapFromNinePatchImage(self.image, self.width(), self.height())</code>直接得到一个处理好的<code>QPixmap</code>对象来使用</li>\n</ol>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><ol>\n<li>建议优先使用pyd版本的（后续提供Python3.4 3.5 3.6 3.7 编译好的32为库文件），也可以自行编译，编译步骤见下文。</li>\n<li>其次可以使用纯python版本2的（个人觉得方便调用）</li>\n<li>最后再考虑纯python版本1的吧</li>\n<li>以上为个人意见，两个C++版本的写法不一样，但是核心算法应该是类似的。</li>\n</ol>\n<h2 id=\"自行编译\"><a href=\"#自行编译\" class=\"headerlink\" title=\"自行编译\"></a>自行编译</h2><ol>\n<li>首先要安装好Qt、PyQt5、编译安装对应的sip、对应的VC++编译工具</li>\n<li>用Qt Creator 打开pro文件进行编译</li>\n<li>进入源码中的sip文件夹修改configure.py文件<pre><code># 这里是你的VC版本和对应的Qt目录中的文件夹\nconfig.platform = &quot;win32-msvc2010&quot;\nqt_path = &#39;D:/soft/Qt/Qt5.5.1/5.5/msvc2010&#39;\n</code></pre></li>\n<li>最后执行python configure.py来编译</li>\n</ol>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"https://github.com/PyQt5/PyQt/tree/master/QLabel\" target=\"_blank\" rel=\"noopener\">https://github.com/PyQt5/PyQt/tree/master/QLabel</a></p>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"https://github.com/PyQt5/PyQt/raw/master/QLabel/ScreenShot/NinePatchImage.gif\" alt=\"NinePatchImage\"></p>\n","raw":"---\nauthor: Irony\ntitle: PyQt5显示.9格式的PNG图片\ndate: 2018-10-26 10:00:08\ntop: 1\ntags: \n - PyQt\n - 图片\n - 气泡\n - .9png\ncategories: 例子\n---\n\n做过安卓开发的和使用过QQ的都知道`.9.png`这种图片格式，效果就如QQ的聊天气泡一样可以拉伸，这种格式的图片允许开发人员定义可扩展区域，当需要延伸图片以填充比图片本身更大区域时，可扩展区的内容被延展；允许开发人员定义内容显示区，用于显示文字或其他内容。目前在`Github`上有两个C++版本的，在这里我把它们都用Python实现了一遍。另外一个我也为`PyQt`提供了编译好的pyd文件。\n<!-- more -->\n\n## C++版本\n\n在Github开源库中搜索到两个C++版本的\n\n1. 一个是 [NinePatchQt](https://github.com/Roninsc2/NinePatchQt)\n2. 一个是 [QtNinePatch](https://github.com/soramimi/QtNinePatch)\n\n## PyQt5版本\n\n这里也分为两个版本，都是基于上面的C++源码翻译改写过来的，具体的例子见项目里面的测试代码吧。\n\n1. [QtNinePatch](https://github.com/PyQt5/PyQt/blob/master/QLabel/QtNinePatch.py)是参考第一个源码编写，用法是在`paintEvent`中调用\n2. [QtNinePatch2](https://github.com/PyQt5/PyQt/blob/master/QLabel/QtNinePatch2.py)是参考第二个源码编写，用法是`pixmap = QtNinePatch.createPixmapFromNinePatchImage(self.image, self.width(), self.height())`直接得到一个处理好的`QPixmap`对象来使用\n\n## 说明\n\n1. 建议优先使用pyd版本的（后续提供Python3.4 3.5 3.6 3.7 编译好的32为库文件），也可以自行编译，编译步骤见下文。\n2. 其次可以使用纯python版本2的（个人觉得方便调用）\n3. 最后再考虑纯python版本1的吧\n4. 以上为个人意见，两个C++版本的写法不一样，但是核心算法应该是类似的。\n\n## 自行编译\n\n1. 首先要安装好Qt、PyQt5、编译安装对应的sip、对应的VC++编译工具\n2. 用Qt Creator 打开pro文件进行编译\n3. 进入源码中的sip文件夹修改configure.py文件\n```\n# 这里是你的VC版本和对应的Qt目录中的文件夹\nconfig.platform = \"win32-msvc2010\"\nqt_path = 'D:/soft/Qt/Qt5.5.1/5.5/msvc2010'\n```\n4. 最后执行python configure.py来编译\n\n## 下载\n\nhttps://github.com/PyQt5/PyQt/tree/master/QLabel\n\n## 效果图\n\n![NinePatchImage](https://github.com/PyQt5/PyQt/raw/master/QLabel/ScreenShot/NinePatchImage.gif)\n\n","categories":[{"name":"例子","path":"api/categories/例子.json"}],"tags":[{"name":"PyQt","path":"api/tags/PyQt.json"},{"name":"图片","path":"api/tags/图片.json"},{"name":"气泡","path":"api/tags/气泡.json"},{"name":".9png","path":"api/tags/.9png.json"}]}