{"author":"Irony","title":"Python调用Java对Excel截图","slug":"calljava","date":"2019-03-12 21:15:06","updated":"2020-02-21T15:27:07.932Z","comments":true,"path":"api/articles/calljava.json","url":"https://pyqt5.com/calljava.html","excerpt":"有的时候会遇到一些奇葩的需求，就是用Excel做报表，但是需要对里面的数据进行填充并生成报表图片，发送出去。这里记录用python调用jar包对excel文件进行公式计算和截图，数据填充可以用xlrd或者openpyxl<br>","covers":["/images/calljava.png"],"content":"<p>有的时候会遇到一些奇葩的需求，就是用Excel做报表，但是需要对里面的数据进行填充并生成报表图片，发送出去。这里记录用python调用jar包对excel文件进行公式计算和截图，数据填充可以用xlrd或者openpyxl<br><a id=\"more\"></a></p>\n<p>利用<code>jpype</code>模块初始化java虚拟机加载jar包然后执行其中的功能。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><pre><code class=\"python\">#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n&quot;&quot;&quot;\nCreated on 2019年3月12日\n@author: Irony\n@site: https://pyqt5.com https://github.com/892768447\n@email: 892768447@qq.com\n@file: CallJava\n@description: \n&quot;&quot;&quot;\nimport os\n\nimport jpype\n\n\n__Author__ = &#39;Irony&#39;\n__Copyright__ = &#39;Copyright (c) 2019&#39;\n\n\ndef convertToImage():\n    Workbook = jpype.JClass(&#39;com.aspose.cells.Workbook&#39;)\n    ImageFormat = jpype.JClass(&#39;com.aspose.cells.ImageFormat&#39;)\n    ImageOrPrintOptions = jpype.JClass(\n        &#39;com.aspose.cells.ImageOrPrintOptions&#39;)\n    SheetRender = jpype.JClass(&#39;com.aspose.cells.SheetRender&#39;)\n\n    book = Workbook(os.path.abspath(&#39;data/test.xlsx&#39;).replace(&#39;\\\\&#39;, &#39;/&#39;))\n    # 保存为html\n    book.save(&#39;data/index.html&#39;, 12)\n    # 保存为pdf\n    book.save(&#39;data/test.pdf&#39;)\n\n    # 截图\n    imgOptions = ImageOrPrintOptions()\n    # imgOptions.setQuality(100)\n    imgOptions.setOnePagePerSheet(True)\n\n    # 输出图片格式\n#     imgOptions.setImageFormat(ImageFormat.getJpeg())\n    imgOptions.setImageFormat(ImageFormat.getPng())\n\n    # 计算\n    CalculationOptions = jpype.JClass(\n        &#39;com.aspose.cells.CalculationOptions&#39;)\n    opt = CalculationOptions()\n    # 对Sheet1中的公式进行计算\n    sheet = book.getWorksheets().get(&#39;Sheet1&#39;)\n    sheet.calculateFormula(opt, True)\n\n    # 设置区域\n    pageSetup = sheet.getPageSetup()\n    # 去掉边距\n    pageSetup.setBottomMargin(0.)\n    pageSetup.setLeftMargin(0.)\n    pageSetup.setRightMargin(0.)\n    pageSetup.setTopMargin(0.)\n    # 设置要截图的区域(对角线)\n    pageSetup.setPrintArea(&#39;A0:C2&#39;)\n    # Create a SheetRender object for the target sheet\n    sr = SheetRender(sheet, imgOptions)\n    for page in range(sr.getPageCount()):\n        # Generate an image for the worksheet\n        sr.toImage(\n            page, os.path.join(&#39;data&#39;, &#39;%d.png&#39; % (page + 1)))\n\n\ndef test():\n    # emm这里不知道什么用绝对路径就报错\n    libs = &#39;{};{}&#39;.format(\n        &#39;libs/bcprov-jdk16-146.jar&#39;,\n        &#39;libs/aspose-cells-19.2.jar&#39;\n    )\n    command = (jpype.getDefaultJVMPath(),\n                   &#39;-ea&#39;, &#39;-Xmn128m&#39;, &#39;-Xms512M&#39;, &#39;-Xmx512M&#39;,\n                   &#39;-Djava.class.path={0}&#39;.format(libs))\n    print(command)\n    jpype.startJVM(jpype.getDefaultJVMPath(),\n                   &#39;-ea&#39;, &#39;-Xmn128m&#39;, &#39;-Xms512M&#39;, &#39;-Xmx512M&#39;,\n                   &#39;-Djava.class.path={0}&#39;.format(libs)\n                   )\n    # 解决多线程问题\n    jpype.attachThreadToJVM()\n    # 对excel截图\n    convertToImage()\n    # 关闭虚拟机\n    jpype.shutdownJVM()\n    print(&#39;截图完成&#39;)\n\n\nif __name__ == &#39;__main__&#39;:\n    test()\n</code></pre>\n<h2 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h2><p><a href=\"/files/调用java生成报表.7z\">调用java生成报表.7z</a></p>\n<p>解压后进入whls文件夹安装对应版本的jpype包</p>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/calljava.png\" alt=\"calljava\"></p>\n","raw":"---\nauthor: Irony\ntitle: Python调用Java对Excel截图\ndate: 2019-03-12 21:15:06\ntop: 1\ntags: \n - Python\n - 截图\ncategories: 教程\n---\n\n有的时候会遇到一些奇葩的需求，就是用Excel做报表，但是需要对里面的数据进行填充并生成报表图片，发送出去。这里记录用python调用jar包对excel文件进行公式计算和截图，数据填充可以用xlrd或者openpyxl\n<!-- more -->\n\n利用`jpype`模块初始化java虚拟机加载jar包然后执行其中的功能。\n\n## 代码\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"\nCreated on 2019年3月12日\n@author: Irony\n@site: https://pyqt5.com https://github.com/892768447\n@email: 892768447@qq.com\n@file: CallJava\n@description: \n\"\"\"\nimport os\n\nimport jpype\n\n\n__Author__ = 'Irony'\n__Copyright__ = 'Copyright (c) 2019'\n\n\ndef convertToImage():\n    Workbook = jpype.JClass('com.aspose.cells.Workbook')\n    ImageFormat = jpype.JClass('com.aspose.cells.ImageFormat')\n    ImageOrPrintOptions = jpype.JClass(\n        'com.aspose.cells.ImageOrPrintOptions')\n    SheetRender = jpype.JClass('com.aspose.cells.SheetRender')\n\n    book = Workbook(os.path.abspath('data/test.xlsx').replace('\\\\', '/'))\n    # 保存为html\n    book.save('data/index.html', 12)\n    # 保存为pdf\n    book.save('data/test.pdf')\n\n    # 截图\n    imgOptions = ImageOrPrintOptions()\n    # imgOptions.setQuality(100)\n    imgOptions.setOnePagePerSheet(True)\n\n    # 输出图片格式\n#     imgOptions.setImageFormat(ImageFormat.getJpeg())\n    imgOptions.setImageFormat(ImageFormat.getPng())\n\n    # 计算\n    CalculationOptions = jpype.JClass(\n        'com.aspose.cells.CalculationOptions')\n    opt = CalculationOptions()\n    # 对Sheet1中的公式进行计算\n    sheet = book.getWorksheets().get('Sheet1')\n    sheet.calculateFormula(opt, True)\n\n    # 设置区域\n    pageSetup = sheet.getPageSetup()\n    # 去掉边距\n    pageSetup.setBottomMargin(0.)\n    pageSetup.setLeftMargin(0.)\n    pageSetup.setRightMargin(0.)\n    pageSetup.setTopMargin(0.)\n    # 设置要截图的区域(对角线)\n    pageSetup.setPrintArea('A0:C2')\n    # Create a SheetRender object for the target sheet\n    sr = SheetRender(sheet, imgOptions)\n    for page in range(sr.getPageCount()):\n        # Generate an image for the worksheet\n        sr.toImage(\n            page, os.path.join('data', '%d.png' % (page + 1)))\n\n\ndef test():\n    # emm这里不知道什么用绝对路径就报错\n    libs = '{};{}'.format(\n        'libs/bcprov-jdk16-146.jar',\n        'libs/aspose-cells-19.2.jar'\n    )\n    command = (jpype.getDefaultJVMPath(),\n                   '-ea', '-Xmn128m', '-Xms512M', '-Xmx512M',\n                   '-Djava.class.path={0}'.format(libs))\n    print(command)\n    jpype.startJVM(jpype.getDefaultJVMPath(),\n                   '-ea', '-Xmn128m', '-Xms512M', '-Xmx512M',\n                   '-Djava.class.path={0}'.format(libs)\n                   )\n    # 解决多线程问题\n    jpype.attachThreadToJVM()\n    # 对excel截图\n    convertToImage()\n    # 关闭虚拟机\n    jpype.shutdownJVM()\n    print('截图完成')\n\n\nif __name__ == '__main__':\n    test()\n```\n\n## 附件\n\n[调用java生成报表.7z](/files/调用java生成报表.7z)\n\n解压后进入whls文件夹安装对应版本的jpype包\n\n## 效果图\n\n![calljava](/images/calljava.png)","categories":[{"name":"教程","path":"api/categories/教程.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"截图","path":"api/tags/截图.json"}]}