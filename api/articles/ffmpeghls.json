{"author":"Irony","title":"FFmpeg合成加密HLS记录","slug":"ffmpeghls","date":"2019-01-12 19:28:06","updated":"2019-11-22T10:12:08.353Z","comments":true,"path":"api/articles/ffmpeghls.json","url":"https://pyqt5.com/ffmpeghls.html","excerpt":"记录在某个需求中要求截图并合成加密视频文件，这里采用FFmpeg的管道流来实现生成HLS加密文件。<br>","covers":null,"content":"<p>记录在某个需求中要求截图并合成加密视频文件，这里采用FFmpeg的管道流来实现生成HLS加密文件。<br><a id=\"more\"></a></p>\n<pre><code class=\"python\">#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n&quot;&quot;&quot;\nCreated on 2019年3月4日\n@author: Irony\n@site: https://pyqt5.com https://github.com/892768447\n@email: 892768447@qq.com\n@file: \n@description: \n&quot;&quot;&quot;\n\nfrom pathlib import Path\nfrom subprocess import Popen, PIPE\n\n\n__Author__ = &quot;&quot;&quot;By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com&quot;&quot;&quot;\n__Copyright__ = &#39;Copyright (c) 2019 Irony&#39;\n__Version__ = 1.0\n\n\n# p = Popen([r&#39;D:\\soft\\ffmpeg\\bin\\ffmpeg.exe&#39;, &#39;-y&#39;,\n#            &#39;-threads&#39;, &#39;2&#39;,\n#            &#39;-f&#39;, &#39;image2pipe&#39;,\n#            &#39;-vcodec&#39;, &#39;mjpeg&#39;, &#39;-r&#39;, &#39;24&#39;, &#39;-i&#39;, &#39;-&#39;,\n#            &#39;-vcodec&#39;, &#39;h264&#39;, &#39;-r&#39;, &#39;24&#39;,\n#            #            &#39;-encryption_scheme&#39;, &#39;cenc-aes-ctr&#39;,\n#            #            &#39;-encryption_key&#39;, &#39;617D8A125A284DF48E3C6B1866348A3F&#39;,\n#            #            &#39;-encryption_kid&#39;, &#39;B326F895B6A24CC5A4DC70995728059C&#39;,\n#            r&#39;F:\\Workspace\\Test\\videos\\video.mp4&#39;], stdin=PIPE)\n\np = Popen([r&#39;D:\\soft\\ffmpeg\\bin\\ffmpeg.exe&#39;,\n           &#39;-re&#39;,   # 按照实际帧率读取输入文件\n           &#39;-y&#39;,        # 覆盖已存在文件\n           &#39;-threads&#39;, &#39;2&#39;,  # 线程数量\n           &#39;-f&#39;, &#39;image2pipe&#39;,  # PIPE图片流\n           &#39;-vcodec&#39;, &#39;mjpeg&#39;,  # 图片编码\n           &#39;-r&#39;, &#39;24&#39;,  # 帧率\n           &#39;-i&#39;, &#39;-&#39;,  # 指定输入流为PIPE\n           &#39;-vcodec&#39;, &#39;h264&#39;,  # 输出编码\n           &#39;-r&#39;, &#39;24&#39;,  # 帧率\n           &#39;-map&#39;, &#39;0&#39;,\n#            &#39;-crf&#39;,&#39;20&#39;,     # 降低质量\n           &#39;-b&#39;, &#39;720k&#39;,        # 码率\n           &#39;-f&#39;, &#39;hls&#39;,\n           &#39;-codec:v&#39;, &#39;libx264&#39;,\n           &#39;-vbsf&#39;, &#39;h264_mp4toannexb&#39;,\n           # 指定加密密匙文件\n           &#39;-hls_key_info_file&#39;, r&#39;F:\\Workspace\\Test\\videokey.info&#39;,\n           &#39;-hls_time&#39;, &#39;20&#39;,\n           &#39;-hls_list_size&#39;, &#39;0&#39;,\n           &#39;-hls_wrap&#39;, &#39;0&#39;,\n#            &#39;-hls_flags&#39;, &#39;single_file&#39;,  # 生成单个文件(有bug)\n           r&#39;F:\\Workspace\\Test\\videos\\playlist.m3u8&#39;], stdin=PIPE)\nprint(p)\n\nt = 1 / 24\nfor i, path in enumerate(Path(&#39;frames&#39;).rglob(&#39;*.jpg&#39;)):\n    #     print(i, path)\n    p.stdin.write(open(str(path), &#39;rb&#39;).read())\n\np.stdin.close()\np.wait()\nprint(&#39;ok&#39;)\n</code></pre>\n","raw":"---\nauthor: Irony\ntitle: FFmpeg合成加密HLS记录\ndate: 2019-01-12 19:28:06\ntop: 1\ntags: \n - Python\n - FFmpeg\n - HLS\ncategories: 笔记\n---\n\n记录在某个需求中要求截图并合成加密视频文件，这里采用FFmpeg的管道流来实现生成HLS加密文件。\n<!-- more -->\n\n```python\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"\nCreated on 2019年3月4日\n@author: Irony\n@site: https://pyqt5.com https://github.com/892768447\n@email: 892768447@qq.com\n@file: \n@description: \n\"\"\"\n\nfrom pathlib import Path\nfrom subprocess import Popen, PIPE\n\n\n__Author__ = \"\"\"By: Irony\nQQ: 892768447\nEmail: 892768447@qq.com\"\"\"\n__Copyright__ = 'Copyright (c) 2019 Irony'\n__Version__ = 1.0\n\n\n# p = Popen([r'D:\\soft\\ffmpeg\\bin\\ffmpeg.exe', '-y',\n#            '-threads', '2',\n#            '-f', 'image2pipe',\n#            '-vcodec', 'mjpeg', '-r', '24', '-i', '-',\n#            '-vcodec', 'h264', '-r', '24',\n#            #            '-encryption_scheme', 'cenc-aes-ctr',\n#            #            '-encryption_key', '617D8A125A284DF48E3C6B1866348A3F',\n#            #            '-encryption_kid', 'B326F895B6A24CC5A4DC70995728059C',\n#            r'F:\\Workspace\\Test\\videos\\video.mp4'], stdin=PIPE)\n\np = Popen([r'D:\\soft\\ffmpeg\\bin\\ffmpeg.exe',\n           '-re',   # 按照实际帧率读取输入文件\n           '-y',        # 覆盖已存在文件\n           '-threads', '2',  # 线程数量\n           '-f', 'image2pipe',  # PIPE图片流\n           '-vcodec', 'mjpeg',  # 图片编码\n           '-r', '24',  # 帧率\n           '-i', '-',  # 指定输入流为PIPE\n           '-vcodec', 'h264',  # 输出编码\n           '-r', '24',  # 帧率\n           '-map', '0',\n#            '-crf','20',     # 降低质量\n           '-b', '720k',        # 码率\n           '-f', 'hls',\n           '-codec:v', 'libx264',\n           '-vbsf', 'h264_mp4toannexb',\n           # 指定加密密匙文件\n           '-hls_key_info_file', r'F:\\Workspace\\Test\\videokey.info',\n           '-hls_time', '20',\n           '-hls_list_size', '0',\n           '-hls_wrap', '0',\n#            '-hls_flags', 'single_file',  # 生成单个文件(有bug)\n           r'F:\\Workspace\\Test\\videos\\playlist.m3u8'], stdin=PIPE)\nprint(p)\n\nt = 1 / 24\nfor i, path in enumerate(Path('frames').rglob('*.jpg')):\n    #     print(i, path)\n    p.stdin.write(open(str(path), 'rb').read())\n\np.stdin.close()\np.wait()\nprint('ok')\n```","categories":[{"name":"笔记","path":"api/categories/笔记.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"FFmpeg","path":"api/tags/FFmpeg.json"},{"name":"HLS","path":"api/tags/HLS.json"}]}